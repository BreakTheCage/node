
========================================================
ACCESS COMMAND
process.argv
========================================================
YARGS:
$ npm i yargs@12.0.2
========================================================
VALIDATOR:
const validator = require('validator');
console.log(validator.isURL('https:/mead.io'));
=========================================================
CHALK:
console.log(chalk.green('1 Success!'));
console.log(chalk.bgGreen('2 Success!'));
console.log(chalk.inverse('3 Success!'));
//>>chalk documentaion
// Combine styled and normal strings
log(chalk.blue('4 Hello') + ' World' + chalk.red('!'));
 
// Compose multiple styles using the chainable API
log(chalk.blue.bgRed.bold('5 Hello world!'));
 
// Pass in multiple arguments
log(chalk.blue('6 Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));
 
// Nest styles
log(chalk.red('7 Hello', chalk.underline.bgBlue('world') + '!'));
 
// Nest styles of the same type even (color, underline, background)
log(chalk.green(
    '8 I am a green line ' +
    chalk.blue.underline.bold('with a blue substring') +
    ' that becomes green again!'
));
 
// ES2015 template literal
log(`9 
CPU: ${chalk.red('90%')}
RAM: ${chalk.green('40%')}
DISK: ${chalk.yellow('70%')}
`);
 
// ES2015 tagged template literal
log(chalk`10 
CPU: {red cpu.totalPercent}
RAM: {green ram.used / ram.total * 100}
DISK: {rgb(255,131,0) disk.used / disk.total * 100}
`);
 
// Use RGB colors in terminal emulators that support it.
log(chalk.keyword('orange')('11 Yay for orange colored text!'));
log(chalk.rgb(123, 45, 67).underline('12 Underlined reddish color'));
log(chalk.hex('#DEADED').bold('13 Bold gray!'));

log(chalk.red.inverse.bold('14 My Error!'));
 
const error = chalk.bold.red;
const warning = chalk.keyword('orange');
const info = chalk.blue.inverse.bold;
 
console.log(error('15 Error!'));
console.log(warning('16 Warning!'));
//<<chalk documentaion
==================================================
//Install nodemon globaly to have live runnig app
$ npm install nodemon@1.18.5 -g
>> use nodemon app.js instead of node app.js
====================================================
// const addF = require('./utils.js');
// const name = 'Saeid';
// console.log(addF(2,3));
//========================================================
// const fs = require('fs');
// //fs.writeFileSync('notes.txt', 'My name is Saeid!');
// fs.appendFileSync('notes.txt', 'I live in Oman.');